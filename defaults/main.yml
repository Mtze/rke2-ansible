---
cluster_name: rke2

# URL to the used RKE2 install script
rke2_download_url: https://get.rke2.io

# Path to download the RKE2 install script to
rke2_download_path: /opt

# RKE2 Cluster node type - Can be agent or server - Make sure to set the variable for agent nodes!
rke2_node_type: server

# Cluster Token (Will be set automatically if not defined)
cluster_token:

# CNI Plugins to deploy, one of none, calico, canal, cilium
cni_plugin: calico

# Disabled components  (valid items: rke2-coredns, rke2-ingress-nginx, rke2-kube-proxy, rke2-metrics-server)
disabled_components:
  - rke2-ingress-nginx

# First node install (Set this to true to generate a Token. Must be executed on one host only!
first_node_install: false

# If kube-vip is used, define the cluster control plane virtual ip and associated DNS name here. These will be added as tls-san.
control_plane_vip:
control_plane_vip_hostname:
# Interface on which the control plane will ARP for the VIP
control_plane_vip_interface:

# Control Plane node wich is used to register all other nodes - Set this to `control_plane_vip_hostname` if you use kube-vip
# Important! This entry has to have the form:
# https://<your-host>:<your-port>
control_plane_server: "https://{{ control_plane_vip_hostname }}:9345"

kubectl_install_on_nodes: true
# Find out version: curl -L https://dl.k8s.io/release/stable.txt
kubectl_version: v1.23.0


# Download kubeconfig from cluster to local machine?
fetch_kube_config: true
local_kube_config_path: "~/.kube/config-{{ cluster_name }}"


debug_output: false
