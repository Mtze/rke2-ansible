---
- name: Ensure rancher directory exists
  become: true
  ansible.builtin.file:
    path: /etc/rancher/rke2
    state: directory

- name: Check if install is necessary
  ansible.builtin.stat:
    path: "{{ rke2_download_path }}/install.sh"
  register: install_script

- name: Show File status for install script
  ansible.builtin.debug:
    var: install_script
  when:
    - debug_output

- name: Get RKE2 Install script
  become: true
  ansible.builtin.get_url:
    url: "{{ rke2_download_url }}"
    dest: "{{ rke2_download_path }}/install.sh"
  when: not install_script.stat.exists

- name: Show variable contents for rke2 config
  ansible.builtin.debug:
    msg: |
      Variable - control_plane_server       {{ control_plane_server       }}
      Variable - control_plane_vip          {{ control_plane_vip          }}
      Variable - control_plane_vip_hostname {{ control_plane_vip_hostname }}
  when:
    - debug_output

- name: Deploy rancher rke2 config
  become: true
  ansible.builtin.template:
    src: rke2_config.yml.j2
    dest: /etc/rancher/rke2/config.yaml
    owner: root
    group: root
    mode: 0600

- name: What will be installed to the node?
  ansible.builtin.debug:
    var: rke2_node_type
  when:
    - debug_output

- name: Execute Install Script
  become: true
  command: 'sh {{ rke2_download_path }}/install.sh'
  environment:
    INSTALL_RKE2_TYPE: "{{ rke2_node_type }}"
    INSTALL_RKE2_VERSION: "{{ rke2_version }}"
  when: not install_script.stat.exists

# RKE2 only allows one node to be in learner state - Hence we need to start one node after the other!
- name: Enable and start RKE2 service
  become: true
  ansible.builtin.service:
    name: "rke2-{{ rke2_node_type }}"
    state: started
    enabled: true
  throttle: 1

- name: Fetch kube config file
  become: true
  ansible.builtin.fetch:
    src: /etc/rancher/rke2/rke2.yaml
    dest: "{{ local_kube_config_path }}"
  run_once: true
  delegate_facts: true
  when:
    - rke2_node_type == "server"
    - fetch_kube_config
    - local_kube_config_path is defined
    - local_kube_config_path is not none
